import logging, re
from malduck.extractor import Extractor
from malduck import procmem, procmempe, xor

log = logging.getLogger()


class IcedID(Extractor):

    family = "icedid"
    yara_rules = ("icedid",)

    @Extractor.extractor("config_decryption")
    def icedid_config(self, p, addr):
        log.info(
            "[+] `IcedID loader config decryption YARA signature matched @ %X" % addr
        )

        try:
            hit = p.uint32v(addr - 3)
            config_location = hit + addr + 1

            config_blob = p.readv(config_location, 250)

            key = config_blob[:32]
            data = config_blob[64:96]

            decrypted_config = xor(key, data)

            domains = decrypted_config[4:]
            domains = domains.split(b"\x00")
            domain = domains[0].decode("UTF-8")

        except Exception as x:
            print(x)

        return {"family": "IcedID", "icedid": {"domains": domain, "key": key.hex()}}
